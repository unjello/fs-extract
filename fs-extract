#!/usr/bin/env ruby
#/ Usage: fs-extract [options]...
#/ -i, --input=DIR     Directory to monitor
#/ -o, --output=DIR    Directory to extract files to
#/ -n, --numbering=N   Begin numbering at N
#/ -p, --prefix=S      Prefix extracted files with S
#/ -e, --ext=E         Add extension
#/ -d, --delay=D       Wait after event before taking action (in seconds)
#/ -v, --verbose
#/ -h, --help
$stderr.sync = true
require 'optparse'
require 'Listen'
require 'FileUtils'

directory_in = ENV['FS_EXTRACT']
directory_out = File.dirname(__FILE__)
numbering = 1
verbose = false
prefix = "Extracted"
ext = nil
delay = 0

def help() exec "grep ^#/<'#{__FILE__}'|cut -c4-" end
ARGV.options do |opts|
  opts.on("-v", "--verbose")              { verbose = true }
  opts.on("-i", "--input=dir", String)    { |val| directory_in = val }
  opts.on("-o", "--output=dir", String)   { |val| directory_out = val }
  opts.on("-n", "--numbering=n", Integer) { |val| numbering = val }
  opts.on("-p", "--prefix=p", String)     { |val| prefix = val.gsub(/[^0-9A-z.\-]/, '_') }
  opts.on("-e", "--ext=e", String)        { |val| ext = val }
  opts.on("-d", "--delya=d", Integer)     { |val| delay = val }
  opts.on_tail("-h", "--help")            { help() }
  opts.parse!
end

help() if directory_in.nil?

puts "Starting numbering at #{numbering};" if verbose and numbering > 1
puts "Forcing #{ext} extension;" if verbose and ext
puts "Monitoring directory: #{directory_in}..." if verbose
listener = Listen.to(directory_in, latency: 1, wait_for_delay: delay) do |added,modified|
  puts "File activity detected: #{added} #{modified}" if verbose
  added = added.concat(modified)
  added.each do |f|
    fname = "#{prefix}_#{numbering.to_s.rjust(2,"0")}_#{File.basename(f)}#{ext}"
    FileUtils.cp(f, File.join(directory_out, fname))
    puts "Extracted: #{fname}"
    numbering += 1
  end
end
listener.start
sleep
